(x : string) is null => bool { x = null }
(x : string) is not null => bool { not x = null }
(x : string) is null or whitespace => bool { .NET System.String.IsNullOrWhiteSpace x }
(x : string) is not null or whitespace => bool { not .NET System.String.IsNullOrWhiteSpace x }
(x : string) is empty => bool { x = "" }
(x : string) is blank => bool { x is null or whitespace }
(x : string) is not blank => bool { not x is blank }

split (buffer : string) on (delimiter : string) => string[] {
  : delimiters : string list := new string list;

  delimiters.Add delimiter;
  buffer.Split
	delimiters.ToArray
	.NET System.StringSplitOptions.RemoveEmptyEntries;
}

join (elements : enumerable string) with (delimiter : string) => string {
  .NET System.String.Join delimiter elements
}

(a : string) + (b : string) => string { .NET System.String.Concat a b }

trim (value : string) => string { value.Trim }

(value : string) take (count : int) at (index : int) => string {
  :result:string := "";

  if value length > index result = value.Substring index, {min count,{value length - index}}
  result;
}

(input : string) length => int {
  input.Length
}

// RMS: causes timeouts in the compiler?
//first non-whitespace in (s : string) after (ix : int) => int {
//  : ptr : int := ix;
//  while ptr < s.Length and .NET System.Char.IsWhitespace s[ptr]
//    ptr = ptr + 1;
//
//  ptr;
//}